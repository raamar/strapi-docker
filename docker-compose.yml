services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  strapi:
    image: node:20-alpine # Используем Node.js 18 LTS
    container_name: strapi
    depends_on:
      - postgres
    working_dir: /srv/app
    volumes:
      - strapi_data:/srv/app
    ports:
      - '1337:1337'
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      NODE_ENV: ${NODE_ENV}
    command: sh -c "if [ ! -f package.json ]; then npx create-strapi@latest . --use-pnpm --install --typescript --no-git-init --no-example --dbclient ${DATABASE_CLIENT} --dbhost ${DATABASE_HOST} --dbport ${DATABASE_PORT} --dbname ${DATABASE_NAME} --dbusername ${DATABASE_USERNAME} --dbpassword ${DATABASE_PASSWORD} --dbssl false; fi && npm i -g pnpm && pnpm i && pnpm develop"
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  strapi_data:
